<?xml version="1.0"?>
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="GObject" version="2.0"/>
<include name="Gio" version="2.0"/>
<package name="libtest.0"/>
<c:include name="async.h"/>
<namespace name="Test" version="0" c:prefix="Test">
	<class name="AsyncTest" c:type="TestAsyncTest" glib:type-name="TestAsyncTest" glib:get-type="test_async_test_get_type" glib:type-struct="AsyncTestClass" parent="GObject.Object">
		<implements name="Valadate.Fixture"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="AsyncTestPrivate" c:type="TestAsyncTestPrivate*"/>
		</field>
		<method name="test_noncancellable" c:identifier="test_async_test_test_noncancellable">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="1" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="test_noncancellable_finish" c:identifier="test_async_test_test_noncancellable_finish">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="test_cancellable" c:identifier="test_async_test_test_cancellable">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="cancel" transfer-ownership="none">
					<type name="Gio.Cancellable" c:type="GCancellable*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="2" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="test_cancellable_finish" c:identifier="test_async_test_test_cancellable_finish">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="test_async_test_new">
			<return-value transfer-ownership="full">
				<type name="Test.AsyncTest" c:type="TestAsyncTest*"/>
			</return-value>
		</constructor>
	</class>
	<record name="AsyncTestClass" c:type="TestAsyncTestClass" glib:is-gtype-struct-for="AsyncTest">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="AsyncTestPrivate" c:type="TestAsyncTestPrivate" disguised="1"/>
	<class name="TestPrime" c:type="TestTestPrime" glib:type-name="TestTestPrime" glib:get-type="test_test_prime_get_type" glib:type-struct="TestPrimeClass" parent="GObject.Object">
		<implements name="Valadate.Fixture"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="TestPrimePrivate" c:type="TestTestPrimePrivate*"/>
		</field>
		<function name="generate_prime" c:identifier="test_test_prime_generate_prime">
			<return-value transfer-ownership="full">
				<type name="GObject.ValueArray" c:type="GValueArray*"/>
			</return-value>
		</function>
		<method name="test_prime" c:identifier="test_test_prime_test_prime">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<constructor name="new" c:identifier="test_test_prime_new">
			<return-value transfer-ownership="full">
				<type name="Test.TestPrime" c:type="TestTestPrime*"/>
			</return-value>
		</constructor>
		<property name="prime" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_prime" c:identifier="test_test_prime_get_prime">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<method name="set_prime" c:identifier="test_test_prime_set_prime">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="TestPrimeClass" c:type="TestTestPrimeClass" glib:is-gtype-struct-for="TestPrime">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="TestPrimePrivate" c:type="TestTestPrimePrivate" disguised="1"/>
	<class name="TempDirTest" c:type="TestTempDirTest" glib:type-name="TestTempDirTest" glib:get-type="test_temp_dir_test_get_type" glib:type-struct="TempDirTestClass" parent="GObject.Object">
		<implements name="Valadate.Fixture"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="TempDirTestPrivate" c:type="TestTempDirTestPrivate*"/>
		</field>
		<method name="test_store" c:identifier="test_temp_dir_test_test_store">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="test_copy_file" c:identifier="test_temp_dir_test_test_copy_file">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="test_shell" c:identifier="test_temp_dir_test_test_shell">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="test_copy_dir" c:identifier="test_temp_dir_test_test_copy_dir">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<constructor name="new" c:identifier="test_temp_dir_test_new">
			<return-value transfer-ownership="full">
				<type name="Test.TempDirTest" c:type="TestTempDirTest*"/>
			</return-value>
		</constructor>
	</class>
	<record name="TempDirTestClass" c:type="TestTempDirTestClass" glib:is-gtype-struct-for="TempDirTest">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="TempDirTestPrivate" c:type="TestTempDirTestPrivate" disguised="1"/>
	<class name="TestWait" c:type="TestTestWait" glib:type-name="TestTestWait" glib:get-type="test_test_wait_get_type" glib:type-struct="TestWaitClass" parent="GObject.Object">
		<implements name="Valadate.Fixture"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="TestWaitPrivate" c:type="TestTestWaitPrivate*"/>
		</field>
		<method name="test_wait_signal_normal" c:identifier="test_test_wait_test_wait_signal_normal">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="test_wait_signal_immediate" c:identifier="test_test_wait_test_wait_signal_immediate">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="test_wait_signal_fail" c:identifier="test_test_wait_test_wait_signal_fail">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="test_wait_condition_normal" c:identifier="test_test_wait_test_wait_condition_normal">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="test_wait_condition_immediate" c:identifier="test_test_wait_test_wait_condition_immediate">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="test_wait_condition_fail" c:identifier="test_test_wait_test_wait_condition_fail">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="test_wait_async_normal" c:identifier="test_test_wait_test_wait_async_normal">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="test_wait_async_fail" c:identifier="test_test_wait_test_wait_async_fail">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="test_wait_cancellable_async_normal" c:identifier="test_test_wait_test_wait_cancellable_async_normal">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="test_wait_cancellable_async_fail" c:identifier="test_test_wait_test_wait_cancellable_async_fail">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<constructor name="new" c:identifier="test_test_wait_new">
			<return-value transfer-ownership="full">
				<type name="Test.TestWait" c:type="TestTestWait*"/>
			</return-value>
		</constructor>
	</class>
	<record name="TestWaitClass" c:type="TestTestWaitClass" glib:is-gtype-struct-for="TestWait">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="TestWaitPrivate" c:type="TestTestWaitPrivate" disguised="1"/>
</namespace>
</repository>
