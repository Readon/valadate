<?xml version="1.0"?>
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="GObject" version="2.0"/>
<include name="Gio" version="2.0"/>
<include name="GLib" version="2.0"/>
<package name="libvaladate-0.1"/>
<c:include name="libvaladate.h"/>
<namespace name="Valadate" version="1.0" c:prefix="Valadate">
	<class name="TempDir" c:type="ValadateTempDir" glib:type-name="ValadateTempDir" glib:get-type="valadate_temp_dir_get_type" glib:type-struct="TempDirClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="TempDirPrivate" c:type="ValadateTempDirPrivate*"/>
		</field>
		<method name="get_orig_dir_name" c:identifier="valadate_temp_dir_get_orig_dir_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<method name="get_tmp_dir_name" c:identifier="valadate_temp_dir_get_tmp_dir_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<method name="file" c:identifier="valadate_temp_dir_file">
			<return-value transfer-ownership="full">
				<type name="Gio.File" c:type="GFile*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="contents" c:identifier="valadate_temp_dir_contents">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="store" c:identifier="valadate_temp_dir_store">
			<return-value transfer-ownership="full">
				<type name="Valadate.TempDir" c:type="ValadateTempDir*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="content" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="copy" c:identifier="valadate_temp_dir_copy">
			<return-value transfer-ownership="full">
				<type name="Valadate.TempDir" c:type="ValadateTempDir*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="src_path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="shell" c:identifier="valadate_temp_dir_shell">
			<return-value transfer-ownership="full">
				<type name="Valadate.TempDir" c:type="ValadateTempDir*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="code" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<function name="delete_recursive" c:identifier="valadate_temp_dir_delete_recursive" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="valadate_temp_dir_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.TempDir" c:type="ValadateTempDir*"/>
			</return-value>
		</constructor>
		<property name="dir">
			<type name="Gio.File" c:type="GFile*"/>
		</property>
		<method name="get_dir" c:identifier="valadate_temp_dir_get_dir">
			<return-value transfer-ownership="none">
				<type name="Gio.File" c:type="GFile*"/>
			</return-value>
		</method>
		<property name="src-dir">
			<type name="Gio.File" c:type="GFile*"/>
		</property>
		<method name="get_src_dir" c:identifier="valadate_temp_dir_get_src_dir">
			<return-value transfer-ownership="full">
				<type name="Gio.File" c:type="GFile*"/>
			</return-value>
		</method>
	</class>
	<record name="TempDirClass" c:type="ValadateTempDirClass" glib:is-gtype-struct-for="TempDir">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="TempDirPrivate" c:type="ValadateTempDirPrivate" disguised="1"/>
	<interface name="Fixture" c:type="ValadateFixture" glib:type-name="ValadateFixture" glib:get-type="valadate_fixture_get_type" glib:type-struct="FixtureIface">
		<prerequisite name="GObject.Object"/>
		<method name="set_up" c:identifier="valadate_fixture_set_up">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="set_up" invoker="set_up">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="tear_down" c:identifier="valadate_fixture_tear_down">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="tear_down" invoker="tear_down">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="get_timeout" c:identifier="valadate_fixture_get_timeout">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<method name="set_timeout" c:identifier="valadate_fixture_set_timeout">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
	</interface>
	<record name="FixtureIface" c:type="ValadateFixtureIface" glib:is-gtype-struct-for="Fixture">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="set_up">
			<callback name="set_up" c:type="set_up">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.Fixture" c:type="ValadateFixture*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="tear_down">
			<callback name="tear_down" c:type="tear_down">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.Fixture" c:type="ValadateFixture*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<callback name="Predicate" c:type="ValadatePredicate">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
	</callback>
	<callback name="Block" c:type="ValadateBlock">
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
	</callback>
	<callback name="AsyncBegin" c:type="ValadateAsyncBegin">
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
		<parameters>
			<parameter name="callback" transfer-ownership="none" closure="1" scope="call">
				<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
			</parameter>
			<parameter name="callback_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="2">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<callback name="CancelableAsyncBegin" c:type="ValadateCancelableAsyncBegin">
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
		<parameters>
			<parameter name="cancel" transfer-ownership="none">
				<type name="Gio.Cancellable" c:type="GCancellable*"/>
			</parameter>
			<parameter name="callback" transfer-ownership="none" closure="2" scope="call">
				<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
			</parameter>
			<parameter name="callback_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="3">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<callback name="AsyncFinish" c:type="ValadateAsyncFinish">
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
		<parameters>
			<parameter name="result" transfer-ownership="none">
				<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<function name="wait_for_condition" c:identifier="valadate_wait_for_condition">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="timeout" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="emitter" transfer-ownership="none">
				<type name="GObject.Object" c:type="GObject*"/>
			</parameter>
			<parameter name="signame" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
			<parameter name="predicate" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Valadate.Predicate" c:type="ValadatePredicate"/>
			</parameter>
			<parameter name="predicate_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="predicate_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="block" transfer-ownership="none" closure="7" scope="call">
				<type name="Valadate.Block" c:type="ValadateBlock"/>
			</parameter>
			<parameter name="block_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
	<function name="wait_for_signal" c:identifier="valadate_wait_for_signal">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="timeout" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="emitter" transfer-ownership="none">
				<type name="GObject.Object" c:type="GObject*"/>
			</parameter>
			<parameter name="signame" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
			<parameter name="block" transfer-ownership="none" closure="4" scope="call">
				<type name="Valadate.Block" c:type="ValadateBlock"/>
			</parameter>
			<parameter name="block_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
	<function name="wait_for_async" c:identifier="valadate_wait_for_async">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="timeout" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="async_function" transfer-ownership="none" closure="2" scope="call">
				<type name="Valadate.AsyncBegin" c:type="ValadateAsyncBegin"/>
			</parameter>
			<parameter name="async_function_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="async_finish" transfer-ownership="none" closure="4" scope="call">
				<type name="Valadate.AsyncFinish" c:type="ValadateAsyncFinish"/>
			</parameter>
			<parameter name="async_finish_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
	<function name="wait_for_cancellable_async" c:identifier="valadate_wait_for_cancellable_async">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="timeout" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="async_function" transfer-ownership="none" closure="2" scope="call">
				<type name="Valadate.CancelableAsyncBegin" c:type="ValadateCancelableAsyncBegin"/>
			</parameter>
			<parameter name="async_function_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="async_finish" transfer-ownership="none" closure="4" scope="call">
				<type name="Valadate.AsyncFinish" c:type="ValadateAsyncFinish"/>
			</parameter>
			<parameter name="async_finish_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
</namespace>
</repository>
