<?xml version="1.0"?>
<repository version="1.2" xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
<include name="GObject" version="2.0"/>
<include name="Gio" version="2.0"/>
<include name="GLib" version="2.0"/>
<package name="libvaladate-1.0"/>
<c:include name="libvaladate-1.0.h"/>
<namespace name="Valadate" version="1.0" c:prefix="Valadate">
	<attribute name="ccode.gir-version" value="1.0"/>
	<attribute name="ccode.gir-namespace" value="Valadate"/>
	<enumeration name="RunError" c:type="ValadateFrameworkRunError" glib:error-domain="valadate_framework_run_error-quark">
		<member name="module" c:identifier="VALADATE_FRAMEWORK_RUN_ERROR_MODULE" value="0"/>
		<member name="gir" c:identifier="VALADATE_FRAMEWORK_RUN_ERROR_GIR" value="1"/>
		<member name="tests" c:identifier="VALADATE_FRAMEWORK_RUN_ERROR_TESTS" value="2"/>
		<member name="method" c:identifier="VALADATE_FRAMEWORK_RUN_ERROR_METHOD" value="3"/>
	</enumeration>
	<class name="FrameworkTextRunner" c:type="ValadateFrameworkTextRunner" glib:type-name="ValadateFrameworkTextRunner" glib:get-type="valadate_framework_text_runner_get_type" glib:type-struct="FrameworkTextRunnerClass" parent="GObject.Object">
		<implements name="Valadate.FrameworkTestRunner"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="FrameworkTextRunnerPrivate" c:type="ValadateFrameworkTextRunnerPrivate*"/>
		</field>
		<constructor name="new" c:identifier="valadate_framework_text_runner_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.FrameworkTextRunner" c:type="ValadateFrameworkTextRunner*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="load" c:identifier="valadate_framework_text_runner_load" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="load_tests" c:identifier="valadate_framework_text_runner_load_tests" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<property name="tests">
			<array>
				<type name="Valadate.Test" c:type="ValadateTest*"/>
			</array>
		</property>
		<method name="get_tests" c:identifier="valadate_framework_text_runner_get_tests">
			<return-value transfer-ownership="none">
				<array length="0">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<callback name="CreateTestObject" c:type="ValadateFrameworkTextRunnerCreateTestObject">
			<return-value transfer-ownership="full">
				<type name="GObject.Object" c:type="GObject*"/>
			</return-value>
		</callback>
		<callback name="TestMethod" c:type="ValadateFrameworkTextRunnerTestMethod">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="self" transfer-ownership="none">
					<type name="Valadate.FrameworkTestCase" c:type="ValadateFrameworkTestCase*"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
		<callback name="AsyncTestMethod" c:type="ValadateFrameworkTextRunnerAsyncTestMethod">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="self" transfer-ownership="none">
					<type name="Valadate.FrameworkTestCase" c:type="ValadateFrameworkTestCase*"/>
				</parameter>
				<parameter name="cb" transfer-ownership="none" closure="2" scope="call">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="cb_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="3">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
		<callback name="AsyncTestMethodResult" c:type="ValadateFrameworkTextRunnerAsyncTestMethodResult">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="self" transfer-ownership="none">
					<type name="Valadate.FrameworkTestCase" c:type="ValadateFrameworkTestCase*"/>
				</parameter>
				<parameter name="res" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
				<parameter name="user_data" transfer-ownership="none" closure="2">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</callback>
	</class>
	<record name="FrameworkTextRunnerClass" c:type="ValadateFrameworkTextRunnerClass" glib:is-gtype-struct-for="TextRunner">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FrameworkTextRunnerPrivate" c:type="ValadateFrameworkTextRunnerPrivate" disguised="1"/>
	<class name="FrameworkTestCase" c:type="ValadateFrameworkTestCase" glib:type-name="ValadateFrameworkTestCase" glib:get-type="valadate_framework_test_case_get_type" glib:type-struct="FrameworkTestCaseClass" parent="Valadate.TestCase" abstract="1" deprecated="Use ValadateTestCase" deprecated-version="1.1">
		<attribute name="version.replacement" value="ValadateTestCase"/>
		<attribute name="version.deprecated" value="true"/>
		<attribute name="version.deprecated-since" value="1.1"/>
		<field name="parent_instance">
			<type name="Valadate.TestCase" c:type="ValadateTestCase"/>
		</field>
		<field name="priv">
			<type name="FrameworkTestCasePrivate" c:type="ValadateFrameworkTestCasePrivate*"/>
		</field>
	</class>
	<record name="FrameworkTestCaseClass" c:type="ValadateFrameworkTestCaseClass" glib:is-gtype-struct-for="TestCase">
		<field name="parent_class">
			<type name="Valadate.TestCaseClass" c:type="ValadateTestCaseClass"/>
		</field>
	</record>
	<record name="FrameworkTestCasePrivate" c:type="ValadateFrameworkTestCasePrivate" disguised="1"/>
	<class name="FrameworkTestSuite" c:type="ValadateFrameworkTestSuite" glib:type-name="ValadateFrameworkTestSuite" glib:get-type="valadate_framework_test_suite_get_type" glib:type-struct="FrameworkTestSuiteClass" parent="Valadate.TestSuite" abstract="1" deprecated="Use ValadateTestSuite" deprecated-version="1.1">
		<attribute name="version.replacement" value="ValadateTestSuite"/>
		<attribute name="version.deprecated" value="true"/>
		<attribute name="version.deprecated-since" value="1.1"/>
		<field name="parent_instance">
			<type name="Valadate.TestSuite" c:type="ValadateTestSuite"/>
		</field>
		<field name="priv">
			<type name="FrameworkTestSuitePrivate" c:type="ValadateFrameworkTestSuitePrivate*"/>
		</field>
		<method name="add_test" c:identifier="valadate_framework_test_suite_add_test">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.FrameworkTest" c:type="ValadateFrameworkTest*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="add_test" invoker="add_test">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.FrameworkTest" c:type="ValadateFrameworkTest*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="run" c:identifier="valadate_framework_test_suite_run">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="result" transfer-ownership="none" allow-none="1">
					<type name="Valadate.FrameworkTestResult" c:type="ValadateFrameworkTestResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="run" invoker="run">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="result" transfer-ownership="none" allow-none="1">
					<type name="Valadate.FrameworkTestResult" c:type="ValadateFrameworkTestResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</class>
	<record name="FrameworkTestSuiteClass" c:type="ValadateFrameworkTestSuiteClass" glib:is-gtype-struct-for="TestSuite">
		<field name="parent_class">
			<type name="Valadate.TestSuiteClass" c:type="ValadateTestSuiteClass"/>
		</field>
				<field name="add_test">
			<callback name="add_test" c:type="add_test">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.FrameworkTestSuite" c:type="ValadateFrameworkTestSuite*"/>
					</parameter>
					<parameter name="test" transfer-ownership="none">
						<type name="Valadate.FrameworkTest" c:type="ValadateFrameworkTest*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="run">
			<callback name="run" c:type="run">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.FrameworkTestSuite" c:type="ValadateFrameworkTestSuite*"/>
					</parameter>
					<parameter name="result" transfer-ownership="none" allow-none="1">
						<type name="Valadate.FrameworkTestResult" c:type="ValadateFrameworkTestResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="FrameworkTestSuitePrivate" c:type="ValadateFrameworkTestSuitePrivate" disguised="1"/>
	<class name="FrameworkTestResult" c:type="ValadateFrameworkTestResult" glib:type-name="ValadateFrameworkTestResult" glib:get-type="valadate_framework_test_result_get_type" glib:type-struct="FrameworkTestResultClass" parent="GObject.Object" deprecated="Use ValadateTestResult" deprecated-version="1.1">
		<attribute name="version.replacement" value="ValadateTestResult"/>
		<attribute name="version.deprecated" value="true"/>
		<attribute name="version.deprecated-since" value="1.1"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="FrameworkTestResultPrivate" c:type="ValadateFrameworkTestResultPrivate*"/>
		</field>
		<method name="add_error" c:identifier="valadate_framework_test_result_add_error">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.FrameworkTest" c:type="ValadateFrameworkTest*"/>
				</parameter>
			</parameters>
		</method>
		<method name="add_failure" c:identifier="valadate_framework_test_result_add_failure">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.FrameworkTest" c:type="ValadateFrameworkTest*"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="valadate_framework_test_result_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.FrameworkTestResult" c:type="ValadateFrameworkTestResult*"/>
			</return-value>
		</constructor>
		<property name="error-count" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_error_count" c:identifier="valadate_framework_test_result_get_error_count">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<property name="failure-count" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_failure_count" c:identifier="valadate_framework_test_result_get_failure_count">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<property name="run-count" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_run_count" c:identifier="valadate_framework_test_result_get_run_count">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
	</class>
	<record name="FrameworkTestResultClass" c:type="ValadateFrameworkTestResultClass" glib:is-gtype-struct-for="TestResult">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="FrameworkTestResultPrivate" c:type="ValadateFrameworkTestResultPrivate" disguised="1"/>
	<interface name="FrameworkTest" c:type="ValadateFrameworkTest" glib:type-name="ValadateFrameworkTest" glib:get-type="valadate_framework_test_get_type" glib:type-struct="TestIface" deprecated="Use ValadateTest" deprecated-version="1.1">
		<prerequisite name="GObject.Object"/>
		<attribute name="version.replacement" value="ValadateTest"/>
		<attribute name="version.deprecated" value="true"/>
		<attribute name="version.deprecated-since" value="1.1"/>
		<method name="run" c:identifier="valadate_framework_test_run">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="result" transfer-ownership="none" allow-none="1">
					<type name="Valadate.FrameworkTestResult" c:type="ValadateFrameworkTestResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="run" invoker="run">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="result" transfer-ownership="none" allow-none="1">
					<type name="Valadate.FrameworkTestResult" c:type="ValadateFrameworkTestResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<callback name="TestMethod" c:type="ValadateFrameworkTestTestMethod">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</callback>
	</interface>
	<record name="TestIface" c:type="ValadateFrameworkTestIface" glib:is-gtype-struct-for="Test">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="run">
			<callback name="run" c:type="run">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.FrameworkTest" c:type="ValadateFrameworkTest*"/>
					</parameter>
					<parameter name="result" transfer-ownership="none" allow-none="1">
						<type name="Valadate.FrameworkTestResult" c:type="ValadateFrameworkTestResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="FrameworkTestFixture" c:type="ValadateFrameworkTestFixture" glib:type-name="ValadateFrameworkTestFixture" glib:get-type="valadate_framework_test_fixture_get_type" glib:type-struct="TestFixtureIface" deprecated="Use ValadateTestFixture" deprecated-version="1.1">
		<prerequisite name="GObject.Object"/>
		<attribute name="version.replacement" value="ValadateTestFixture"/>
		<attribute name="version.deprecated" value="true"/>
		<attribute name="version.deprecated-since" value="1.1"/>
		<method name="set_up" c:identifier="valadate_framework_test_fixture_set_up">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="set_up" invoker="set_up">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="tear_down" c:identifier="valadate_framework_test_fixture_tear_down">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="tear_down" invoker="tear_down">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="TestFixtureIface" c:type="ValadateFrameworkTestFixtureIface" glib:is-gtype-struct-for="TestFixture">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="set_up">
			<callback name="set_up" c:type="set_up">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.FrameworkTestFixture" c:type="ValadateFrameworkTestFixture*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="tear_down">
			<callback name="tear_down" c:type="tear_down">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.FrameworkTestFixture" c:type="ValadateFrameworkTestFixture*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="FrameworkTestRunner" c:type="ValadateFrameworkTestRunner" glib:type-name="ValadateFrameworkTestRunner" glib:get-type="valadate_framework_test_runner_get_type" glib:type-struct="TestRunnerIface" deprecated="Use ValadateTestRunner" deprecated-version="1.1">
		<prerequisite name="GObject.Object"/>
		<attribute name="version.replacement" value="ValadateTestRunner"/>
		<attribute name="version.deprecated" value="true"/>
		<attribute name="version.deprecated-since" value="1.1"/>
	</interface>
	<record name="TestRunnerIface" c:type="ValadateFrameworkTestRunnerIface" glib:is-gtype-struct-for="TestRunner">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<function name="introspection_repository_get_class_by_type" c:identifier="valadate_introspection_repository_get_class_by_type" deprecated="Use " deprecated-version="1.1">
		<attribute name="version.replacement" value=""/>
		<attribute name="version.deprecated" value="true"/>
		<attribute name="version.deprecated-since" value="1.1"/>
		<return-value transfer-ownership="full">
			<array length="1">
				<type name="Valadate.IntrospectionClass" c:type="ValadateIntrospectionClass*"/>
			</array>
		</return-value>
		<parameters>
			<parameter name="type" transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</parameter>
			<parameter name="result_length1" direction="out" transfer-ownership="none">
				<type name="gint" c:type="gint*"/>
			</parameter>
		</parameters>
	</function>
	<function name="introspection_repository_get_class_by_name" c:identifier="valadate_introspection_repository_get_class_by_name" deprecated="Use " deprecated-version="1.1">
		<attribute name="version.replacement" value=""/>
		<attribute name="version.deprecated" value="true"/>
		<attribute name="version.deprecated-since" value="1.1"/>
		<return-value transfer-ownership="full">
			<type name="Valadate.IntrospectionClass" c:type="ValadateIntrospectionClass*"/>
		</return-value>
		<parameters>
			<parameter name="name" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<function name="introspection_repository_add_package" c:identifier="valadate_introspection_repository_add_package" throws="1" deprecated="Use " deprecated-version="1.1">
		<attribute name="version.replacement" value=""/>
		<attribute name="version.deprecated" value="true"/>
		<attribute name="version.deprecated-since" value="1.1"/>
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
		<parameters>
			<parameter name="modpath" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
			<parameter name="girpath" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
		</parameters>
	</function>
	<enumeration name="Error" c:type="ValadateIntrospectionError" glib:error-domain="valadate_introspection_error-quark">
		<member name="module" c:identifier="VALADATE_INTROSPECTION_ERROR_MODULE" value="0"/>
		<member name="gir" c:identifier="VALADATE_INTROSPECTION_ERROR_GIR" value="1"/>
		<member name="parser" c:identifier="VALADATE_INTROSPECTION_ERROR_PARSER" value="2"/>
		<member name="tests" c:identifier="VALADATE_INTROSPECTION_ERROR_TESTS" value="3"/>
		<member name="method" c:identifier="VALADATE_INTROSPECTION_ERROR_METHOD" value="4"/>
	</enumeration>
	<class name="IntrospectionTypeInfo" c:type="ValadateIntrospectionTypeInfo" glib:type-name="ValadateIntrospectionTypeInfo" glib:get-type="valadate_introspection_typeinfo_get_type" glib:type-struct="IntrospectionTypeInfoClass" parent="GObject.Object" deprecated="Use " deprecated-version="1.1">
		<attribute name="version.replacement" value=""/>
		<attribute name="version.deprecated" value="true"/>
		<attribute name="version.deprecated-since" value="1.1"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="IntrospectionTypeInfoPrivate" c:type="ValadateIntrospectionTypeInfoPrivate*"/>
		</field>
		<constructor name="new" c:identifier="valadate_introspection_typeinfo_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.IntrospectionTypeInfo" c:type="ValadateIntrospectionTypeInfo*"/>
			</return-value>
		</constructor>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="valadate_introspection_typeinfo_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
	</class>
	<record name="IntrospectionTypeInfoClass" c:type="ValadateIntrospectionTypeInfoClass" glib:is-gtype-struct-for="TypeInfo">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="IntrospectionTypeInfoPrivate" c:type="ValadateIntrospectionTypeInfoPrivate" disguised="1"/>
	<class name="IntrospectionClass" c:type="ValadateIntrospectionClass" glib:type-name="ValadateIntrospectionClass" glib:get-type="valadate_introspection_class_get_type" glib:type-struct="IntrospectionClassClass" parent="GObject.Object" deprecated="Use " deprecated-version="1.1">
		<attribute name="version.replacement" value=""/>
		<attribute name="version.deprecated" value="true"/>
		<attribute name="version.deprecated-since" value="1.1"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="IntrospectionClassPrivate" c:type="ValadateIntrospectionClassPrivate*"/>
		</field>
		<method name="get_methods" c:identifier="valadate_introspection_class_get_methods" deprecated="Use " deprecated-version="1.1">
			<attribute name="version.replacement" value=""/>
			<attribute name="version.deprecated" value="true"/>
			<attribute name="version.deprecated-since" value="1.1"/>
			<return-value transfer-ownership="full">
				<array length="0">
					<type name="Valadate.IntrospectionMethod" c:type="ValadateIntrospectionMethod*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_method" c:identifier="valadate_introspection_class_get_method" deprecated="Use " deprecated-version="1.1">
			<attribute name="version.replacement" value=""/>
			<attribute name="version.deprecated" value="true"/>
			<attribute name="version.deprecated-since" value="1.1"/>
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</return-value>
			<parameters>
				<parameter name="methodname" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="get_instance" c:identifier="valadate_introspection_class_get_instance" deprecated="Use " deprecated-version="1.1">
			<attribute name="version.replacement" value=""/>
			<attribute name="version.deprecated" value="true"/>
			<attribute name="version.deprecated-since" value="1.1"/>
			<return-value transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</return-value>
		</method>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="valadate_introspection_class_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<property name="abstract">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_abstract" c:identifier="valadate_introspection_class_get_abstract">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<property name="class-type">
			<type name="GType" c:type="GType"/>
		</property>
		<method name="get_class_type" c:identifier="valadate_introspection_class_get_class_type">
			<return-value transfer-ownership="none">
				<type name="GType" c:type="GType"/>
			</return-value>
		</method>
		<property name="annotations" writable="1">
			<array>
				<type name="Valadate.IntrospectionAnnotation" c:type="ValadateIntrospectionAnnotation*"/>
			</array>
		</property>
		<method name="get_annotations" c:identifier="valadate_introspection_class_get_annotations">
			<return-value transfer-ownership="none">
				<array length="0">
					<type name="Valadate.IntrospectionAnnotation" c:type="ValadateIntrospectionAnnotation*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="IntrospectionClassClass" c:type="ValadateIntrospectionClassClass" glib:is-gtype-struct-for="Class">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="IntrospectionClassPrivate" c:type="ValadateIntrospectionClassPrivate" disguised="1"/>
	<class name="IntrospectionMethod" c:type="ValadateIntrospectionMethod" glib:type-name="ValadateIntrospectionMethod" glib:get-type="valadate_introspection_method_get_type" glib:type-struct="IntrospectionMethodClass" parent="GObject.Object" deprecated="Use " deprecated-version="1.1">
		<attribute name="version.replacement" value=""/>
		<attribute name="version.deprecated" value="true"/>
		<attribute name="version.deprecated-since" value="1.1"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="IntrospectionMethodPrivate" c:type="ValadateIntrospectionMethodPrivate*"/>
		</field>
		<constructor name="new" c:identifier="valadate_introspection_method_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.IntrospectionMethod" c:type="ValadateIntrospectionMethod*"/>
			</return-value>
		</constructor>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="valadate_introspection_method_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<property name="identifier" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_identifier" c:identifier="valadate_introspection_method_get_identifier">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<property name="return-value" writable="1">
			<type name="Valadate.IntrospectionParameter" c:type="ValadateIntrospectionParameter*"/>
		</property>
		<method name="get_return_value" c:identifier="valadate_introspection_method_get_return_value">
			<return-value transfer-ownership="none">
				<type name="Valadate.IntrospectionParameter" c:type="ValadateIntrospectionParameter*"/>
			</return-value>
		</method>
		<property name="parameters" writable="1">
			<array>
				<type name="Valadate.IntrospectionParameter" c:type="ValadateIntrospectionParameter*"/>
			</array>
		</property>
		<method name="get_parameters" c:identifier="valadate_introspection_method_get_parameters">
			<return-value transfer-ownership="none">
				<array length="0">
					<type name="Valadate.IntrospectionParameter" c:type="ValadateIntrospectionParameter*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
		<property name="annotations" writable="1">
			<array>
				<type name="Valadate.IntrospectionAnnotation" c:type="ValadateIntrospectionAnnotation*"/>
			</array>
		</property>
		<method name="get_annotations" c:identifier="valadate_introspection_method_get_annotations">
			<return-value transfer-ownership="none">
				<array length="0">
					<type name="Valadate.IntrospectionAnnotation" c:type="ValadateIntrospectionAnnotation*"/>
				</array>
			</return-value>
			<parameters>
				<parameter name="result_length1" direction="out" transfer-ownership="none">
					<type name="gint" c:type="gint*"/>
				</parameter>
			</parameters>
		</method>
	</class>
	<record name="IntrospectionMethodClass" c:type="ValadateIntrospectionMethodClass" glib:is-gtype-struct-for="Method">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="IntrospectionMethodPrivate" c:type="ValadateIntrospectionMethodPrivate" disguised="1"/>
	<class name="IntrospectionField" c:type="ValadateIntrospectionField" glib:type-name="ValadateIntrospectionField" glib:get-type="valadate_introspection_field_get_type" glib:type-struct="IntrospectionFieldClass" parent="GObject.Object" deprecated="Use " deprecated-version="1.1">
		<attribute name="version.replacement" value=""/>
		<attribute name="version.deprecated" value="true"/>
		<attribute name="version.deprecated-since" value="1.1"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="IntrospectionFieldPrivate" c:type="ValadateIntrospectionFieldPrivate*"/>
		</field>
		<constructor name="new" c:identifier="valadate_introspection_field_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.IntrospectionField" c:type="ValadateIntrospectionField*"/>
			</return-value>
		</constructor>
	</class>
	<record name="IntrospectionFieldClass" c:type="ValadateIntrospectionFieldClass" glib:is-gtype-struct-for="Field">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="IntrospectionFieldPrivate" c:type="ValadateIntrospectionFieldPrivate" disguised="1"/>
	<class name="IntrospectionParameter" c:type="ValadateIntrospectionParameter" glib:type-name="ValadateIntrospectionParameter" glib:get-type="valadate_introspection_parameter_get_type" glib:type-struct="IntrospectionParameterClass" parent="GObject.Object" deprecated="Use " deprecated-version="1.1">
		<attribute name="version.replacement" value=""/>
		<attribute name="version.deprecated" value="true"/>
		<attribute name="version.deprecated-since" value="1.1"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="IntrospectionParameterPrivate" c:type="ValadateIntrospectionParameterPrivate*"/>
		</field>
		<constructor name="new" c:identifier="valadate_introspection_parameter_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.IntrospectionParameter" c:type="ValadateIntrospectionParameter*"/>
			</return-value>
		</constructor>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="valadate_introspection_parameter_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<property name="transfer-ownership" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_transfer_ownership" c:identifier="valadate_introspection_parameter_get_transfer_ownership">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
	</class>
	<record name="IntrospectionParameterClass" c:type="ValadateIntrospectionParameterClass" glib:is-gtype-struct-for="Parameter">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="IntrospectionParameterPrivate" c:type="ValadateIntrospectionParameterPrivate" disguised="1"/>
	<class name="IntrospectionAnnotation" c:type="ValadateIntrospectionAnnotation" glib:type-name="ValadateIntrospectionAnnotation" glib:get-type="valadate_introspection_annotation_get_type" glib:type-struct="IntrospectionAnnotationClass" parent="GObject.Object" deprecated="Use " deprecated-version="1.1">
		<attribute name="version.replacement" value=""/>
		<attribute name="version.deprecated" value="true"/>
		<attribute name="version.deprecated-since" value="1.1"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="IntrospectionAnnotationPrivate" c:type="ValadateIntrospectionAnnotationPrivate*"/>
		</field>
		<constructor name="new" c:identifier="valadate_introspection_annotation_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.IntrospectionAnnotation" c:type="ValadateIntrospectionAnnotation*"/>
			</return-value>
		</constructor>
		<property name="key" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_key" c:identifier="valadate_introspection_annotation_get_key">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="valadate_introspection_annotation_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<property name="value" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_value" c:identifier="valadate_introspection_annotation_get_value">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
	</class>
	<record name="IntrospectionAnnotationClass" c:type="ValadateIntrospectionAnnotationClass" glib:is-gtype-struct-for="Annotation">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="IntrospectionAnnotationPrivate" c:type="ValadateIntrospectionAnnotationPrivate" disguised="1"/>
	<class name="UtilsTempDir" c:type="ValadateUtilsTempDir" glib:type-name="ValadateUtilsTempDir" glib:get-type="valadate_utils_temp_dir_get_type" glib:type-struct="UtilsTempDirClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="UtilsTempDirPrivate" c:type="ValadateUtilsTempDirPrivate*"/>
		</field>
		<method name="get_orig_dir_name" c:identifier="valadate_utils_temp_dir_get_orig_dir_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<method name="get_tmp_dir_name" c:identifier="valadate_utils_temp_dir_get_tmp_dir_name">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</method>
		<method name="file" c:identifier="valadate_utils_temp_dir_file">
			<return-value transfer-ownership="full">
				<type name="Gio.File" c:type="GFile*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="contents" c:identifier="valadate_utils_temp_dir_contents">
			<return-value transfer-ownership="full">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="store" c:identifier="valadate_utils_temp_dir_store">
			<return-value transfer-ownership="full">
				<type name="Valadate.UtilsTempDir" c:type="ValadateUtilsTempDir*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="content" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="copy" c:identifier="valadate_utils_temp_dir_copy">
			<return-value transfer-ownership="full">
				<type name="Valadate.UtilsTempDir" c:type="ValadateUtilsTempDir*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="src_path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="shell" c:identifier="valadate_utils_temp_dir_shell">
			<return-value transfer-ownership="full">
				<type name="Valadate.UtilsTempDir" c:type="ValadateUtilsTempDir*"/>
			</return-value>
			<parameters>
				<parameter name="path" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="code" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<function name="delete_recursive" c:identifier="valadate_utils_temp_dir_delete_recursive" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="file" transfer-ownership="none">
					<type name="Gio.File" c:type="GFile*"/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="valadate_utils_temp_dir_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.UtilsTempDir" c:type="ValadateUtilsTempDir*"/>
			</return-value>
		</constructor>
		<property name="dir">
			<type name="Gio.File" c:type="GFile*"/>
		</property>
		<method name="get_dir" c:identifier="valadate_utils_temp_dir_get_dir">
			<return-value transfer-ownership="none">
				<type name="Gio.File" c:type="GFile*"/>
			</return-value>
		</method>
		<property name="src-dir">
			<type name="Gio.File" c:type="GFile*"/>
		</property>
		<method name="get_src_dir" c:identifier="valadate_utils_temp_dir_get_src_dir">
			<return-value transfer-ownership="full">
				<type name="Gio.File" c:type="GFile*"/>
			</return-value>
		</method>
	</class>
	<record name="UtilsTempDirClass" c:type="ValadateUtilsTempDirClass" glib:is-gtype-struct-for="TempDir">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="UtilsTempDirPrivate" c:type="ValadateUtilsTempDirPrivate" disguised="1"/>
	<class name="UtilsMultiSignalWaiter" c:type="ValadateUtilsMultiSignalWaiter" glib:type-name="ValadateUtilsMultiSignalWaiter" glib:get-type="valadate_utils_multi_signal_waiter_get_type" glib:type-struct="UtilsMultiSignalWaiterClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="UtilsMultiSignalWaiterPrivate" c:type="ValadateUtilsMultiSignalWaiterPrivate*"/>
		</field>
		<method name="add_signal" c:identifier="valadate_utils_multi_signal_waiter_add_signal">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="emitter" transfer-ownership="none">
					<type name="GObject.Object" c:type="GObject*"/>
				</parameter>
				<parameter name="signame" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<method name="run" c:identifier="valadate_utils_multi_signal_waiter_run">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
			<parameters>
				<parameter name="block" transfer-ownership="none" closure="1" scope="call">
					<type name="Valadate.UtilsBlock" c:type="ValadateUtilsBlock"/>
				</parameter>
				<parameter name="block_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="timeout" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<constructor name="new" c:identifier="valadate_utils_multi_signal_waiter_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.UtilsMultiSignalWaiter" c:type="ValadateUtilsMultiSignalWaiter*"/>
			</return-value>
		</constructor>
	</class>
	<record name="UtilsMultiSignalWaiterClass" c:type="ValadateUtilsMultiSignalWaiterClass" glib:is-gtype-struct-for="MultiSignalWaiter">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="UtilsMultiSignalWaiterPrivate" c:type="ValadateUtilsMultiSignalWaiterPrivate" disguised="1"/>
	<callback name="Predicate" c:type="ValadateUtilsPredicate">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
	</callback>
	<callback name="Block" c:type="ValadateUtilsBlock">
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
	</callback>
	<callback name="AsyncBegin" c:type="ValadateUtilsAsyncBegin">
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
		<parameters>
			<parameter name="callback" transfer-ownership="none" closure="1" scope="call">
				<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
			</parameter>
			<parameter name="callback_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="2">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<callback name="CancelableAsyncBegin" c:type="ValadateUtilsCancelableAsyncBegin">
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
		<parameters>
			<parameter name="cancel" transfer-ownership="none">
				<type name="Gio.Cancellable" c:type="GCancellable*"/>
			</parameter>
			<parameter name="callback" transfer-ownership="none" closure="2" scope="call">
				<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
			</parameter>
			<parameter name="callback_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="3">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<callback name="AsyncFinish" c:type="ValadateUtilsAsyncFinish" throws="1">
		<return-value transfer-ownership="full">
			<type name="none"/>
		</return-value>
		<parameters>
			<parameter name="result" transfer-ownership="none">
				<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
			</parameter>
			<parameter name="user_data" transfer-ownership="none" closure="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</callback>
	<function name="utils_wait_for_condition" c:identifier="valadate_utils_wait_for_condition">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="timeout" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="emitter" transfer-ownership="none">
				<type name="GObject.Object" c:type="GObject*"/>
			</parameter>
			<parameter name="signame" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
			<parameter name="predicate" transfer-ownership="none" closure="4" scope="notified" destroy="5">
				<type name="Valadate.UtilsPredicate" c:type="ValadateUtilsPredicate"/>
			</parameter>
			<parameter name="predicate_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="predicate_target_destroy_notify" transfer-ownership="none" scope="call">
				<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
			</parameter>
			<parameter name="block" transfer-ownership="none" closure="7" scope="call">
				<type name="Valadate.UtilsBlock" c:type="ValadateUtilsBlock"/>
			</parameter>
			<parameter name="block_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
	<function name="utils_wait_for_signal" c:identifier="valadate_utils_wait_for_signal">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="timeout" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="emitter" transfer-ownership="none">
				<type name="GObject.Object" c:type="GObject*"/>
			</parameter>
			<parameter name="signame" transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</parameter>
			<parameter name="block" transfer-ownership="none" closure="4" scope="call">
				<type name="Valadate.UtilsBlock" c:type="ValadateUtilsBlock"/>
			</parameter>
			<parameter name="block_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
	<function name="utils_wait_for_async" c:identifier="valadate_utils_wait_for_async" throws="1">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="timeout" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="async_function" transfer-ownership="none" closure="2" scope="call">
				<type name="Valadate.UtilsAsyncBegin" c:type="ValadateUtilsAsyncBegin"/>
			</parameter>
			<parameter name="async_function_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="async_finish" transfer-ownership="none" closure="4" scope="call">
				<type name="Valadate.UtilsAsyncFinish" c:type="ValadateUtilsAsyncFinish"/>
			</parameter>
			<parameter name="async_finish_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
	<function name="utils_wait_for_cancellable_async" c:identifier="valadate_utils_wait_for_cancellable_async" throws="1">
		<return-value transfer-ownership="full">
			<type name="gboolean" c:type="gboolean"/>
		</return-value>
		<parameters>
			<parameter name="timeout" transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</parameter>
			<parameter name="async_function" transfer-ownership="none" closure="2" scope="call">
				<type name="Valadate.UtilsCancelableAsyncBegin" c:type="ValadateUtilsCancelableAsyncBegin"/>
			</parameter>
			<parameter name="async_function_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
			<parameter name="async_finish" transfer-ownership="none" closure="4" scope="call">
				<type name="Valadate.UtilsAsyncFinish" c:type="ValadateUtilsAsyncFinish"/>
			</parameter>
			<parameter name="async_finish_target" transfer-ownership="none" allow-none="1">
				<type name="gpointer" c:type="void*"/>
			</parameter>
		</parameters>
	</function>
	<enumeration name="TestStatus" c:type="ValadateTestStatus" glib:type-name="ValadateTestStatus" glib:get-type="valadate_test_status_get_type">
		<member name="not_run" c:identifier="VALADATE_TEST_STATUS_NOT_RUN" value="0"/>
		<member name="running" c:identifier="VALADATE_TEST_STATUS_RUNNING" value="1"/>
		<member name="passed" c:identifier="VALADATE_TEST_STATUS_PASSED" value="2"/>
		<member name="skipped" c:identifier="VALADATE_TEST_STATUS_SKIPPED" value="3"/>
		<member name="error" c:identifier="VALADATE_TEST_STATUS_ERROR" value="4"/>
		<member name="failed" c:identifier="VALADATE_TEST_STATUS_FAILED" value="5"/>
	</enumeration>
	<enumeration name="TestError" c:type="ValadateTestError" glib:error-domain="valadate_test_error-quark">
		<member name="not_found" c:identifier="VALADATE_TEST_ERROR_NOT_FOUND" value="0"/>
	</enumeration>
	<enumeration name="ConfigError" c:type="ValadateConfigError" glib:error-domain="valadate_config_error-quark">
		<member name="module" c:identifier="VALADATE_CONFIG_ERROR_MODULE" value="0"/>
		<member name="testplan" c:identifier="VALADATE_CONFIG_ERROR_TESTPLAN" value="1"/>
		<member name="method" c:identifier="VALADATE_CONFIG_ERROR_METHOD" value="2"/>
	</enumeration>
	<enumeration name="AssertError" c:type="ValadateAssertError" glib:error-domain="valadate_assert_error-quark">
		<member name="unexpected_value" c:identifier="VALADATE_ASSERT_ERROR_UNEXPECTED_VALUE" value="0"/>
		<member name="unexpected_state" c:identifier="VALADATE_ASSERT_ERROR_UNEXPECTED_STATE" value="1"/>
	</enumeration>
	<enumeration name="XmlFileError" c:type="ValadateXmlFileError" glib:error-domain="valadate_xml_file_error-quark">
		<member name="error" c:identifier="VALADATE_XML_FILE_ERROR_ERROR" value="0"/>
	</enumeration>
	<class name="AsyncTestResult" c:type="ValadateAsyncTestResult" glib:type-name="ValadateAsyncTestResult" glib:get-type="valadate_async_test_result_get_type" glib:type-struct="AsyncTestResultClass" parent="GObject.Object">
		<implements name="Valadate.TestResult"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="AsyncTestResultPrivate" c:type="ValadateAsyncTestResultPrivate*"/>
		</field>
		<constructor name="new" c:identifier="valadate_async_test_result_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.AsyncTestResult" c:type="ValadateAsyncTestResult*"/>
			</return-value>
			<parameters>
				<parameter name="config" transfer-ownership="none">
					<type name="Valadate.TestConfig" c:type="ValadateTestConfig*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="AsyncTestResultClass" c:type="ValadateAsyncTestResultClass" glib:is-gtype-struct-for="AsyncTestResult">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="AsyncTestResultPrivate" c:type="ValadateAsyncTestResultPrivate" disguised="1"/>
	<class name="GirTestPlan" c:type="ValadateGirTestPlan" glib:type-name="ValadateGirTestPlan" glib:get-type="valadate_gir_test_plan_get_type" glib:type-struct="GirTestPlanClass" parent="GObject.Object">
		<implements name="Valadate.TestPlan"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="GirTestPlanPrivate" c:type="ValadateGirTestPlanPrivate*"/>
		</field>
		<constructor name="new" c:identifier="valadate_gir_test_plan_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.GirTestPlan" c:type="ValadateGirTestPlan*"/>
			</return-value>
		</constructor>
	</class>
	<record name="GirTestPlanClass" c:type="ValadateGirTestPlanClass" glib:is-gtype-struct-for="GirTestPlan">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="GirTestPlanPrivate" c:type="ValadateGirTestPlanPrivate" disguised="1"/>
	<class name="Module" c:type="ValadateModule" glib:type-name="ValadateModule" glib:get-type="valadate_module_get_type" glib:type-struct="ModuleClass" parent="GObject.TypeModule">
		<field name="parent_instance">
			<type name="GObject.TypeModule" c:type="GTypeModule"/>
		</field>
		<field name="priv">
			<type name="ModulePrivate" c:type="ValadateModulePrivate*"/>
		</field>
		<function name="load_all" c:identifier="valadate_module_load_all">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</function>
		<constructor name="new" c:identifier="valadate_module_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.Module" c:type="ValadateModule*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
	</class>
	<record name="ModuleClass" c:type="ValadateModuleClass" glib:is-gtype-struct-for="Module">
		<field name="parent_class">
			<type name="GObject.TypeModuleClass" c:type="GTypeModuleClass"/>
		</field>
	</record>
	<record name="ModulePrivate" c:type="ValadateModulePrivate" disguised="1"/>
	<class name="TestModule" c:type="ValadateTestModule" glib:type-name="ValadateTestModule" glib:get-type="valadate_test_module_get_type" glib:type-struct="TestModuleClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="TestModulePrivate" c:type="ValadateTestModulePrivate*"/>
		</field>
		<constructor name="new" c:identifier="valadate_test_module_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.TestModule" c:type="ValadateTestModule*"/>
			</return-value>
			<parameters>
				<parameter name="libpath" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="load_module" c:identifier="valadate_test_module_load_module" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
	</class>
	<record name="TestModuleClass" c:type="ValadateTestModuleClass" glib:is-gtype-struct-for="TestModule">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="TestModulePrivate" c:type="ValadateTestModulePrivate" disguised="1"/>
	<class name="TestCase" c:type="ValadateTestCase" glib:type-name="ValadateTestCase" glib:get-type="valadate_test_case_get_type" glib:type-struct="TestCaseClass" parent="GObject.Object" abstract="1">
		<implements name="Valadate.Test"/>
		<implements name="Valadate.TestFixture"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="TestCasePrivate" c:type="ValadateTestCasePrivate*"/>
		</field>
		<method name="add_test" c:identifier="valadate_test_case_add_test">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="testname" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="test" transfer-ownership="none" closure="2" scope="notified" destroy="3">
					<type name="Valadate.TestCaseTestMethod" c:type="ValadateTestCaseTestMethod"/>
				</parameter>
				<parameter name="test_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="test_target_destroy_notify" transfer-ownership="none" scope="call">
					<type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
				</parameter>
				<parameter name="label" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="run" c:identifier="valadate_test_case_run">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="result" transfer-ownership="none">
					<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="run" invoker="run">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="result" transfer-ownership="none">
					<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="bug" c:identifier="valadate_test_case_bug">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="reference" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="skip" c:identifier="valadate_test_case_skip">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="fail" c:identifier="valadate_test_case_fail">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="message" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_up" c:identifier="valadate_test_case_set_up">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="set_up" invoker="set_up">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="tear_down" c:identifier="valadate_test_case_tear_down">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="tear_down" invoker="tear_down">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<property name="bug-base" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_bug_base" c:identifier="valadate_test_case_get_bug_base">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<method name="set_bug_base" c:identifier="valadate_test_case_set_bug_base">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<callback name="TestMethod" c:type="ValadateTestCaseTestMethod">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</callback>
	</class>
	<record name="TestCaseClass" c:type="ValadateTestCaseClass" glib:is-gtype-struct-for="TestCase">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
				<field name="run">
			<callback name="run" c:type="run">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestCase" c:type="ValadateTestCase*"/>
					</parameter>
					<parameter name="result" transfer-ownership="none">
						<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="set_up">
			<callback name="set_up" c:type="set_up">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestCase" c:type="ValadateTestCase*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="tear_down">
			<callback name="tear_down" c:type="tear_down">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestCase" c:type="ValadateTestCase*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="TestCasePrivate" c:type="ValadateTestCasePrivate" disguised="1"/>
	<class name="TestConfig" c:type="ValadateTestConfig" glib:type-name="ValadateTestConfig" glib:get-type="valadate_test_config_get_type" glib:type-struct="TestConfigClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="TestConfigPrivate" c:type="ValadateTestConfigPrivate*"/>
		</field>
		<constructor name="new" c:identifier="valadate_test_config_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.TestConfig" c:type="ValadateTestConfig*"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="Valadate.TestOptions" c:type="ValadateTestOptions*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="parse" c:identifier="valadate_test_config_parse">
			<return-value transfer-ownership="full">
				<type name="gint" c:type="gint"/>
			</return-value>
			<parameters>
				<parameter name="args" transfer-ownership="none">
					<array length="1">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="args_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="options" writable="1" construct="1">
			<type name="Valadate.TestOptions" c:type="ValadateTestOptions*"/>
		</property>
		<method name="get_options" c:identifier="valadate_test_config_get_options">
			<return-value transfer-ownership="none">
				<type name="Valadate.TestOptions" c:type="ValadateTestOptions*"/>
			</return-value>
		</method>
		<method name="set_options" c:identifier="valadate_test_config_set_options">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="Valadate.TestOptions" c:type="ValadateTestOptions*"/>
				</parameter>
			</parameters>
		</method>
		<property name="seed">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_seed" c:identifier="valadate_test_config_get_seed">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<property name="runtest">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_runtest" c:identifier="valadate_test_config_get_runtest">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<property name="list-only">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_list_only" c:identifier="valadate_test_config_get_list_only">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<property name="keep-going">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_keep_going" c:identifier="valadate_test_config_get_keep_going">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<property name="timed">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_timed" c:identifier="valadate_test_config_get_timed">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<property name="root" writable="1">
			<type name="Valadate.TestSuite" c:type="ValadateTestSuite*"/>
		</property>
		<method name="get_root" c:identifier="valadate_test_config_get_root">
			<return-value transfer-ownership="none">
				<type name="Valadate.TestSuite" c:type="ValadateTestSuite*"/>
			</return-value>
		</method>
	</class>
	<record name="TestConfigClass" c:type="ValadateTestConfigClass" glib:is-gtype-struct-for="TestConfig">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="TestConfigPrivate" c:type="ValadateTestConfigPrivate" disguised="1"/>
	<record name="TestOptions">
		<field name="opt_context">
			<type name="GLib.OptionContext" c:type="GOptionContext*"/>
		</field>
		<constant name="options" c:identifier="VALADATE_TEST_OPTIONS_options" value="(null)">
			<array>
				<type name="GLib.OptionEntry" c:type="GOptionEntry"/>
			</array>
		</constant>
		<function name="get_current_test_path" c:identifier="valadate_test_options_get_current_test_path">
			<return-value transfer-ownership="full" allow-none="1">
				<type name="utf8" c:type="gchar*"/>
			</return-value>
		</function>
		<constructor name="new" c:identifier="valadate_test_options_new" throws="1">
			<return-value transfer-ownership="full">
				<type name="Valadate.TestOptions" c:type="ValadateTestOptions*"/>
			</return-value>
			<parameters>
				<parameter name="args" transfer-ownership="none">
					<array length="1">
						<type name="utf8" c:type="gchar*"/>
					</array>
				</parameter>
				<parameter name="args_length1" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="binary" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_binary" c:identifier="valadate_test_options_get_binary">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<method name="set_binary" c:identifier="valadate_test_options_set_binary">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<property name="seed">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_seed" c:identifier="valadate_test_options_get_seed">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<property name="runtest">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_runtest" c:identifier="valadate_test_options_get_runtest">
			<return-value transfer-ownership="none" allow-none="1">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<property name="list">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_list" c:identifier="valadate_test_options_get_list">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<property name="keepgoing">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_keepgoing" c:identifier="valadate_test_options_get_keepgoing">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<property name="timed">
			<type name="gboolean" c:type="gboolean"/>
		</property>
		<method name="get_timed" c:identifier="valadate_test_options_get_timed">
			<return-value transfer-ownership="none">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
	</record>
	<class name="TestRunner" c:type="ValadateTestRunner" glib:type-name="ValadateTestRunner" glib:get-type="valadate_test_runner_get_type" glib:type-struct="TestRunnerClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="TestRunnerPrivate" c:type="ValadateTestRunnerPrivate*"/>
		</field>
		<constructor name="new" c:identifier="valadate_test_runner_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.TestRunner" c:type="ValadateTestRunner*"/>
			</return-value>
			<parameters>
				<parameter name="plan" transfer-ownership="none">
					<type name="Valadate.TestPlan" c:type="ValadateTestPlan*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="run_all" c:identifier="valadate_test_runner_run_all">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<method name="run_test" c:identifier="valadate_test_runner_run_test">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</parameter>
				<parameter name="result" transfer-ownership="none">
					<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="run" c:identifier="valadate_test_runner_run">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</parameter>
				<parameter name="result" transfer-ownership="none">
					<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
				</parameter>
				<parameter name="_callback_" transfer-ownership="none" allow-none="1" closure="3" scope="async">
					<type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
				</parameter>
				<parameter name="_callback__target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
			</parameters>
		</method>
		<method name="run_finish" c:identifier="valadate_test_runner_run_finish">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="_res_" transfer-ownership="none">
					<type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
				</parameter>
			</parameters>
		</method>
		<method name="process_buffer" c:identifier="valadate_test_runner_process_buffer">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</parameter>
				<parameter name="result" transfer-ownership="none">
					<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
				</parameter>
				<parameter name="buffer" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="failed" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
			</parameters>
		</method>
		<property name="testcount" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_testcount" c:identifier="valadate_test_runner_get_testcount">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
	</class>
	<record name="TestRunnerClass" c:type="ValadateTestRunnerClass" glib:is-gtype-struct-for="TestRunner">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="TestRunnerPrivate" c:type="ValadateTestRunnerPrivate" disguised="1"/>
	<record name="TestReport">
		<constructor name="new" c:identifier="valadate_test_report_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.TestReport" c:type="ValadateTestReport*"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</parameter>
				<parameter name="status" transfer-ownership="none">
					<type name="Valadate.TestStatus" c:type="ValadateTestStatus"/>
				</parameter>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="message" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<property name="test" writable="1">
			<type name="Valadate.Test" c:type="ValadateTest*"/>
		</property>
		<method name="get_test" c:identifier="valadate_test_report_get_test">
			<return-value transfer-ownership="none">
				<type name="Valadate.Test" c:type="ValadateTest*"/>
			</return-value>
		</method>
		<method name="set_test" c:identifier="valadate_test_report_set_test">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</parameter>
			</parameters>
		</method>
		<property name="status" writable="1">
			<type name="Valadate.TestStatus" c:type="ValadateTestStatus"/>
		</property>
		<method name="get_status" c:identifier="valadate_test_report_get_status">
			<return-value transfer-ownership="none">
				<type name="Valadate.TestStatus" c:type="ValadateTestStatus"/>
			</return-value>
		</method>
		<method name="set_status" c:identifier="valadate_test_report_set_status">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="Valadate.TestStatus" c:type="ValadateTestStatus"/>
				</parameter>
			</parameters>
		</method>
		<property name="index" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_index" c:identifier="valadate_test_report_get_index">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<method name="set_index" c:identifier="valadate_test_report_set_index">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<property name="message" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_message" c:identifier="valadate_test_report_get_message">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<method name="set_message" c:identifier="valadate_test_report_set_message">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<glib:signal name="report">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="status" transfer-ownership="none">
					<type name="Valadate.TestStatus" c:type="ValadateTestStatus"/>
				</parameter>
			</parameters>
		</glib:signal>
	</record>
	<class name="TestSuite" c:type="ValadateTestSuite" glib:type-name="ValadateTestSuite" glib:get-type="valadate_test_suite_get_type" glib:type-struct="TestSuiteClass" parent="GObject.Object">
		<implements name="Valadate.Test"/>
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="TestSuitePrivate" c:type="ValadateTestSuitePrivate*"/>
		</field>
		<constructor name="new" c:identifier="valadate_test_suite_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.TestSuite" c:type="ValadateTestSuite*"/>
			</return-value>
			<parameters>
				<parameter name="name" transfer-ownership="none" allow-none="1">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="add_test" c:identifier="valadate_test_suite_add_test">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</parameter>
			</parameters>
		</method>
		<method name="set_up" c:identifier="valadate_test_suite_set_up">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="set_up" invoker="set_up">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="tear_down" c:identifier="valadate_test_suite_tear_down">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="tear_down" invoker="tear_down">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<property name="tests">
			<type name="GLib.List" c:type="GList*">
				<type name="Valadate.Test" c:type="ValadateTest*"/>
			</type>
		</property>
		<method name="get_tests" c:identifier="valadate_test_suite_get_tests">
			<return-value transfer-ownership="none">
				<type name="GLib.List" c:type="GList*">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</type>
			</return-value>
		</method>
	</class>
	<record name="TestSuiteClass" c:type="ValadateTestSuiteClass" glib:is-gtype-struct-for="TestSuite">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
				<field name="set_up">
			<callback name="set_up" c:type="set_up">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestSuite" c:type="ValadateTestSuite*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
				<field name="tear_down">
			<callback name="tear_down" c:type="tear_down">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestSuite" c:type="ValadateTestSuite*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="TestSuitePrivate" c:type="ValadateTestSuitePrivate" disguised="1"/>
	<class name="Assert" c:type="ValadateAssert" glib:type-name="ValadateAssert" glib:get-type="valadate_assert_get_type" glib:type-struct="AssertClass" parent="GObject.Object">
		<field name="parent_instance">
			<type name="GObject.Object" c:type="GObject"/>
		</field>
		<field name="priv">
			<type name="AssertPrivate" c:type="ValadateAssertPrivate*"/>
		</field>
		<function name="equals" c:identifier="valadate_assert_equals">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="expected" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="actual" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<function name="not_null" c:identifier="valadate_assert_not_null">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<function name="null" c:identifier="valadate_assert_null">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<function name="are_equal" c:identifier="valadate_assert_are_equal" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="expected" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="actual" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<function name="are_not_equal" c:identifier="valadate_assert_are_not_equal" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="not_expected" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="actual" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="gpointer"/>
				</parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<function name="is_true" c:identifier="valadate_assert_is_true" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="actual" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<function name="is_false" c:identifier="valadate_assert_is_false" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="actual" transfer-ownership="none">
					<type name="gboolean" c:type="gboolean"/>
				</parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<function name="fail" c:identifier="valadate_assert_fail" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<function name="should_throw_async" c:identifier="valadate_assert_should_throw_async" throws="1">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="fbegin" transfer-ownership="none" closure="1" scope="call">
					<type name="Valadate.UtilsAsyncBegin" c:type="ValadateUtilsAsyncBegin"/>
				</parameter>
				<parameter name="fbegin_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="ffinish" transfer-ownership="none" closure="3" scope="call">
					<type name="Valadate.UtilsAsyncFinish" c:type="ValadateUtilsAsyncFinish"/>
				</parameter>
				<parameter name="ffinish_target" transfer-ownership="none" allow-none="1">
					<type name="gpointer" c:type="void*"/>
				</parameter>
				<parameter name="domain" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</function>
		<constructor name="new" c:identifier="valadate_assert_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.Assert" c:type="ValadateAssert*"/>
			</return-value>
		</constructor>
	</class>
	<record name="AssertClass" c:type="ValadateAssertClass" glib:is-gtype-struct-for="Assert">
		<field name="parent_class">
			<type name="GObject.ObjectClass" c:type="GObjectClass"/>
		</field>
	</record>
	<record name="AssertPrivate" c:type="ValadateAssertPrivate" disguised="1"/>
	<interface name="Driver" c:type="ValadateDriver" glib:type-name="ValadateDriver" glib:get-type="valadate_driver_get_type" glib:type-struct="DriverIface">
		<prerequisite name="GObject.Object"/>
	</interface>
	<record name="DriverIface" c:type="ValadateDriverIface" glib:is-gtype-struct-for="Driver">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
	</record>
	<interface name="Test" c:type="ValadateTest" glib:type-name="ValadateTest" glib:get-type="valadate_test_get_type" glib:type-struct="TestIface">
		<prerequisite name="GObject.Object"/>
		<method name="run" c:identifier="valadate_test_run">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="result" transfer-ownership="none">
					<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="run" invoker="run">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="result" transfer-ownership="none">
					<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="get" c:identifier="valadate_test_get">
			<return-value transfer-ownership="full">
				<type name="Valadate.Test" c:type="ValadateTest*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="get" invoker="get">
			<return-value transfer-ownership="full">
				<type name="Valadate.Test" c:type="ValadateTest*"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="set" c:identifier="valadate_test_set">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set" invoker="set">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="index" transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</parameter>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="iterator" c:identifier="valadate_test_iterator">
			<return-value transfer-ownership="full">
				<type name="Valadate.TestTestIterator" c:type="ValadateTestTestIterator*"/>
			</return-value>
		</method>
		<virtual-method name="iterator" invoker="iterator">
			<return-value transfer-ownership="full">
				<type name="Valadate.TestTestIterator" c:type="ValadateTestTestIterator*"/>
			</return-value>
		</virtual-method>
		<property name="name" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_name" c:identifier="valadate_test_get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_name" invoker="get_name">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_name" c:identifier="valadate_test_set_name">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_name" invoker="set_name">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="label" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_label" c:identifier="valadate_test_get_label">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_label" invoker="get_label">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_label" c:identifier="valadate_test_set_label">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_label" invoker="set_label">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="count">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_count" c:identifier="valadate_test_get_count">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<virtual-method name="get_count" invoker="get_count">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="TestIface" c:type="ValadateTestIface" glib:is-gtype-struct-for="Test">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="run">
			<callback name="run" c:type="run">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.Test" c:type="ValadateTest*"/>
					</parameter>
					<parameter name="result" transfer-ownership="none">
						<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get">
			<callback name="get" c:type="get">
				<return-value transfer-ownership="full">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.Test" c:type="ValadateTest*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set">
			<callback name="set" c:type="set">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.Test" c:type="ValadateTest*"/>
					</parameter>
					<parameter name="index" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
					<parameter name="test" transfer-ownership="none">
						<type name="Valadate.Test" c:type="ValadateTest*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="iterator">
			<callback name="iterator" c:type="iterator">
				<return-value transfer-ownership="full">
					<type name="Valadate.TestTestIterator" c:type="ValadateTestTestIterator*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.Test" c:type="ValadateTest*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_name">
			<callback name="get_name" c:type="get_name">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.Test" c:type="ValadateTest*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_name">
			<callback name="set_name" c:type="set_name">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.Test" c:type="ValadateTest*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_label">
			<callback name="get_label" c:type="get_label">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.Test" c:type="ValadateTest*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_label">
			<callback name="set_label" c:type="set_label">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.Test" c:type="ValadateTest*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_count">
			<callback name="get_count" c:type="get_count">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.Test" c:type="ValadateTest*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<record name="TestTestIterator">
		<constructor name="new" c:identifier="valadate_test_test_iterator_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.TestTestIterator" c:type="ValadateTestTestIterator*"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</parameter>
			</parameters>
		</constructor>
		<method name="get" c:identifier="valadate_test_test_iterator_get">
			<return-value transfer-ownership="full">
				<type name="Valadate.Test" c:type="ValadateTest*"/>
			</return-value>
		</method>
		<method name="next" c:identifier="valadate_test_test_iterator_next">
			<return-value transfer-ownership="full">
				<type name="gboolean" c:type="gboolean"/>
			</return-value>
		</method>
		<property name="size">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_size" c:identifier="valadate_test_test_iterator_get_size">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
	</record>
	<interface name="TestFixture" c:type="ValadateTestFixture" glib:type-name="ValadateTestFixture" glib:get-type="valadate_test_fixture_get_type" glib:type-struct="TestFixtureIface">
		<prerequisite name="GObject.Object"/>
		<method name="set_up" c:identifier="valadate_test_fixture_set_up">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="set_up" invoker="set_up">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="tear_down" c:identifier="valadate_test_fixture_tear_down">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="tear_down" invoker="tear_down">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
	</interface>
	<record name="TestFixtureIface" c:type="ValadateTestFixtureIface" glib:is-gtype-struct-for="TestFixture">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="set_up">
			<callback name="set_up" c:type="set_up">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestFixture" c:type="ValadateTestFixture*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="tear_down">
			<callback name="tear_down" c:type="tear_down">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestFixture" c:type="ValadateTestFixture*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="TestPlan" c:type="ValadateTestPlan" glib:type-name="ValadateTestPlan" glib:get-type="valadate_test_plan_get_type" glib:type-struct="TestPlanIface">
		<prerequisite name="GObject.Object"/>
		<function name="new" c:identifier="valadate_test_plan_new">
			<return-value transfer-ownership="full">
				<type name="Valadate.TestPlan" c:type="ValadateTestPlan*"/>
			</return-value>
			<parameters>
				<parameter name="options" transfer-ownership="none">
					<type name="Valadate.TestOptions" c:type="ValadateTestOptions*"/>
				</parameter>
			</parameters>
		</function>
		<property name="plan" writable="1" construct="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_plan" c:identifier="valadate_test_plan_get_plan">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_plan" invoker="get_plan">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_plan" c:identifier="valadate_test_plan_set_plan">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_plan" invoker="set_plan">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="binary" writable="1">
			<type name="utf8" c:type="gchar*"/>
		</property>
		<method name="get_binary" c:identifier="valadate_test_plan_get_binary">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</method>
		<virtual-method name="get_binary" invoker="get_binary">
			<return-value transfer-ownership="none">
				<type name="utf8" c:type="const gchar*"/>
			</return-value>
		</virtual-method>
		<method name="set_binary" c:identifier="valadate_test_plan_set_binary">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_binary" invoker="set_binary">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="options" writable="1" construct="1">
			<type name="Valadate.TestOptions" c:type="ValadateTestOptions*"/>
		</property>
		<method name="get_options" c:identifier="valadate_test_plan_get_options">
			<return-value transfer-ownership="none">
				<type name="Valadate.TestOptions" c:type="ValadateTestOptions*"/>
			</return-value>
		</method>
		<virtual-method name="get_options" invoker="get_options">
			<return-value transfer-ownership="none">
				<type name="Valadate.TestOptions" c:type="ValadateTestOptions*"/>
			</return-value>
		</virtual-method>
		<method name="set_options" c:identifier="valadate_test_plan_set_options">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="Valadate.TestOptions" c:type="ValadateTestOptions*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_options" invoker="set_options">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="Valadate.TestOptions" c:type="ValadateTestOptions*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="config" writable="1">
			<type name="Valadate.TestConfig" c:type="ValadateTestConfig*"/>
		</property>
		<method name="get_config" c:identifier="valadate_test_plan_get_config">
			<return-value transfer-ownership="none">
				<type name="Valadate.TestConfig" c:type="ValadateTestConfig*"/>
			</return-value>
		</method>
		<virtual-method name="get_config" invoker="get_config">
			<return-value transfer-ownership="none">
				<type name="Valadate.TestConfig" c:type="ValadateTestConfig*"/>
			</return-value>
		</virtual-method>
		<method name="set_config" c:identifier="valadate_test_plan_set_config">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="Valadate.TestConfig" c:type="ValadateTestConfig*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_config" invoker="set_config">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="Valadate.TestConfig" c:type="ValadateTestConfig*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="result" writable="1">
			<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
		</property>
		<method name="get_result" c:identifier="valadate_test_plan_get_result">
			<return-value transfer-ownership="none">
				<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
			</return-value>
		</method>
		<virtual-method name="get_result" invoker="get_result">
			<return-value transfer-ownership="none">
				<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
			</return-value>
		</virtual-method>
		<method name="set_result" c:identifier="valadate_test_plan_set_result">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_result" invoker="set_result">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="TestPlanIface" c:type="ValadateTestPlanIface" glib:is-gtype-struct-for="TestPlan">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="get_plan">
			<callback name="get_plan" c:type="get_plan">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestPlan" c:type="ValadateTestPlan*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_plan">
			<callback name="set_plan" c:type="set_plan">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestPlan" c:type="ValadateTestPlan*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_binary">
			<callback name="get_binary" c:type="get_binary">
				<return-value transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestPlan" c:type="ValadateTestPlan*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_binary">
			<callback name="set_binary" c:type="set_binary">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestPlan" c:type="ValadateTestPlan*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_options">
			<callback name="get_options" c:type="get_options">
				<return-value transfer-ownership="none">
					<type name="Valadate.TestOptions" c:type="ValadateTestOptions*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestPlan" c:type="ValadateTestPlan*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_options">
			<callback name="set_options" c:type="set_options">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestPlan" c:type="ValadateTestPlan*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="Valadate.TestOptions" c:type="ValadateTestOptions*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_config">
			<callback name="get_config" c:type="get_config">
				<return-value transfer-ownership="none">
					<type name="Valadate.TestConfig" c:type="ValadateTestConfig*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestPlan" c:type="ValadateTestPlan*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_config">
			<callback name="set_config" c:type="set_config">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestPlan" c:type="ValadateTestPlan*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="Valadate.TestConfig" c:type="ValadateTestConfig*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_result">
			<callback name="get_result" c:type="get_result">
				<return-value transfer-ownership="none">
					<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestPlan" c:type="ValadateTestPlan*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_result">
			<callback name="set_result" c:type="set_result">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestPlan" c:type="ValadateTestPlan*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
	<interface name="TestResult" c:type="ValadateTestResult" glib:type-name="ValadateTestResult" glib:get-type="valadate_test_result_get_type" glib:type-struct="TestResultIface">
		<prerequisite name="GObject.Object"/>
		<method name="report" c:identifier="valadate_test_result_report">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</method>
		<virtual-method name="report" invoker="report">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
		</virtual-method>
		<method name="add_error" c:identifier="valadate_test_result_add_error">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</parameter>
				<parameter name="error" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="add_error" invoker="add_error">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</parameter>
				<parameter name="error" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="add_failure" c:identifier="valadate_test_result_add_failure">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</parameter>
				<parameter name="failure" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="add_failure" invoker="add_failure">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</parameter>
				<parameter name="failure" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="add_success" c:identifier="valadate_test_result_add_success">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="add_success" invoker="add_success">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="add_skip" c:identifier="valadate_test_result_add_skip">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</parameter>
				<parameter name="reason" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="add_skip" invoker="add_skip">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="test" transfer-ownership="none">
					<type name="Valadate.Test" c:type="ValadateTest*"/>
				</parameter>
				<parameter name="reason" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
				<parameter name="message" transfer-ownership="none">
					<type name="utf8" c:type="const gchar*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<method name="run" c:identifier="valadate_test_result_run">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="runner" transfer-ownership="none">
					<type name="Valadate.TestRunner" c:type="ValadateTestRunner*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="run" invoker="run">
			<return-value transfer-ownership="full">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="runner" transfer-ownership="none">
					<type name="Valadate.TestRunner" c:type="ValadateTestRunner*"/>
				</parameter>
			</parameters>
		</virtual-method>
		<property name="testcount" writable="1">
			<type name="gint" c:type="gint"/>
		</property>
		<method name="get_testcount" c:identifier="valadate_test_result_get_testcount">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</method>
		<virtual-method name="get_testcount" invoker="get_testcount">
			<return-value transfer-ownership="none">
				<type name="gint" c:type="gint"/>
			</return-value>
		</virtual-method>
		<property name="config" writable="1" construct="1">
			<type name="Valadate.TestConfig" c:type="ValadateTestConfig*"/>
		</property>
		<method name="get_config" c:identifier="valadate_test_result_get_config">
			<return-value transfer-ownership="none">
				<type name="Valadate.TestConfig" c:type="ValadateTestConfig*"/>
			</return-value>
		</method>
		<virtual-method name="get_config" invoker="get_config">
			<return-value transfer-ownership="none">
				<type name="Valadate.TestConfig" c:type="ValadateTestConfig*"/>
			</return-value>
		</virtual-method>
		<method name="set_config" c:identifier="valadate_test_result_set_config">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="Valadate.TestConfig" c:type="ValadateTestConfig*"/>
				</parameter>
			</parameters>
		</method>
		<virtual-method name="set_config" invoker="set_config">
			<return-value transfer-ownership="none">
				<type name="none"/>
			</return-value>
			<parameters>
				<parameter name="value" transfer-ownership="none">
					<type name="Valadate.TestConfig" c:type="ValadateTestConfig*"/>
				</parameter>
			</parameters>
		</virtual-method>
	</interface>
	<record name="TestResultIface" c:type="ValadateTestResultIface" glib:is-gtype-struct-for="TestResult">
		<field name="parent_iface">
			<type name="GObject.TypeInterface" c:type="GTypeInterface"/>
		</field>
		<field name="report">
			<callback name="report" c:type="report">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="add_error">
			<callback name="add_error" c:type="add_error">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
					</parameter>
					<parameter name="test" transfer-ownership="none">
						<type name="Valadate.Test" c:type="ValadateTest*"/>
					</parameter>
					<parameter name="error" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="add_failure">
			<callback name="add_failure" c:type="add_failure">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
					</parameter>
					<parameter name="test" transfer-ownership="none">
						<type name="Valadate.Test" c:type="ValadateTest*"/>
					</parameter>
					<parameter name="failure" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="add_success">
			<callback name="add_success" c:type="add_success">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
					</parameter>
					<parameter name="test" transfer-ownership="none">
						<type name="Valadate.Test" c:type="ValadateTest*"/>
					</parameter>
					<parameter name="message" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="add_skip">
			<callback name="add_skip" c:type="add_skip">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
					</parameter>
					<parameter name="test" transfer-ownership="none">
						<type name="Valadate.Test" c:type="ValadateTest*"/>
					</parameter>
					<parameter name="reason" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
					<parameter name="message" transfer-ownership="none">
						<type name="utf8" c:type="const gchar*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="run">
			<callback name="run" c:type="run">
				<return-value transfer-ownership="full">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
					</parameter>
					<parameter name="runner" transfer-ownership="none">
						<type name="Valadate.TestRunner" c:type="ValadateTestRunner*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_testcount">
			<callback name="get_testcount" c:type="get_testcount">
				<return-value transfer-ownership="none">
					<type name="gint" c:type="gint"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_testcount">
			<callback name="set_testcount" c:type="set_testcount">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="gint" c:type="gint"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="get_config">
			<callback name="get_config" c:type="get_config">
				<return-value transfer-ownership="none">
					<type name="Valadate.TestConfig" c:type="ValadateTestConfig*"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
		<field name="set_config">
			<callback name="set_config" c:type="set_config">
				<return-value transfer-ownership="none">
					<type name="none"/>
				</return-value>
				<parameters>
					<parameter name="self" transfer-ownership="none">
						<type name="Valadate.TestResult" c:type="ValadateTestResult*"/>
					</parameter>
					<parameter name="value" transfer-ownership="none">
						<type name="Valadate.TestConfig" c:type="ValadateTestConfig*"/>
					</parameter>
				</parameters>
			</callback>
		</field>
	</record>
</namespace>
</repository>
