/* testpie.h generated by valac 0.30.0, the Vala compiler, do not modify */


#ifndef __TESTPIE_H__
#define __TESTPIE_H__

#include <glib.h>
#include <libvaladate.h>

G_BEGIN_DECLS


#define VALADATE_TYPE_TEST_PIE (valadate_test_pie_get_type ())
#define VALADATE_TEST_PIE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), VALADATE_TYPE_TEST_PIE, ValadateTestPIE))
#define VALADATE_TEST_PIE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), VALADATE_TYPE_TEST_PIE, ValadateTestPIEClass))
#define VALADATE_IS_TEST_PIE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), VALADATE_TYPE_TEST_PIE))
#define VALADATE_IS_TEST_PIE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), VALADATE_TYPE_TEST_PIE))
#define VALADATE_TEST_PIE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), VALADATE_TYPE_TEST_PIE, ValadateTestPIEClass))

typedef struct _ValadateTestPIE ValadateTestPIE;
typedef struct _ValadateTestPIEClass ValadateTestPIEClass;
typedef struct _ValadateTestPIEPrivate ValadateTestPIEPrivate;

struct _ValadateTestPIE {
	ValadateTestCase parent_instance;
	ValadateTestPIEPrivate * priv;
};

struct _ValadateTestPIEClass {
	ValadateTestCaseClass parent_class;
};


GType valadate_test_pie_get_type (void) G_GNUC_CONST;
ValadateTestPIE* valadate_test_pie_new (void);
ValadateTestPIE* valadate_test_pie_construct (GType object_type);
void valadate_test_pie_test_pie_fail (void);
void valadate_test_pie_test_pie_pass (void);


G_END_DECLS

#endif
