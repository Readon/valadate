/* tests-abstract-tests.vapi generated by valac 0.34.7, do not modify. */

[CCode (gir_namespace = "Valadate", gir_version = "1.0")]
namespace Valadate {
	namespace Tests {
		[CCode (cheader_filename = "object-factory.h")]
		public abstract class AbstractTests : Valadate.TestCase {
			protected Valadate.Tests.ObjectFactory factory;
			protected string mysteryanimal;
			public AbstractTests ();
			public override void set_up ();
			public virtual void test_get_chicken ();
			public virtual void test_get_crocodile ();
			public virtual void test_get_dog ();
			public virtual void test_get_duck ();
			public virtual void test_get_goat ();
			public virtual void test_get_mystery_animal ();
			public virtual void test_get_yak ();
		}
		[CCode (cheader_filename = "object-factory.h")]
		public class ConcreteTests : Valadate.Tests.AbstractTests {
			public ConcreteTests ();
			public override void test_get_dog ();
		}
		[CCode (cheader_filename = "object-factory.h")]
		public class ObjectFactory : GLib.Object {
			public ObjectFactory ();
			public Valadate.Tests.TestObject get_object (string name) throws Valadate.Tests.FactoryError;
		}
		[CCode (cheader_filename = "object-factory.h")]
		public class TestObject : GLib.Object {
			public TestObject ();
			public string name { get; set construct; }
		}
		[CCode (cheader_filename = "object-factory.h")]
		public errordomain FactoryError {
			NOT_FOUND
		}
	}
}
